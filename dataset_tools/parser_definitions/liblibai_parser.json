
{
  "parser_name": "LibLibAI Parser",
  "priority": 160,
  "target_file_types": ["PNG"],
  "detection_rules": [
    {
      "comment": "Rule 1: Must have the AIGC PNG chunk.",
      "source_type": "pil_info_key",
      "source_key": "AIGC",
      "operator": "exists"
    },
    {
      "comment": "Rule 2: The AIGC chunk must contain the liblibai.com service provider string.",
      "source_type": "pil_info_key",
      "source_key": "AIGC",
      "operator": "contains",
      "value": "liblibai.com"
    }
  ],
  "parsing_instructions": {
    "input_data": {
      "source_type": "pil_info_key",
      "source_key": "AIGC"
    },
    "fields": [
      {
        "target_key": "tool",
        "method": "static_value",
        "value": "LibLibAI"
      },
      {
        "target_key": "parameters.ServiceProvider",
        "method": "regex_on_input_data_string",
        "pattern": "'ServiceProvider':\\s*'([^']*)'"
      },
      {
        "target_key": "parameters.ContentID",
        "method": "regex_on_input_data_string",
        "pattern": "'ContentID':\\s*(\\d+)"
      },
      {
        "target_key": "parameters.Time",
        "method": "regex_on_input_data_string",
        "pattern": "'Time':\\s*(\\d+)"
      }
    ],
    "output_template": {
      "tool": "$tool",
      "format": "LibLibAI",
      "parameters": {
        "ServiceProvider": "$parameters_ServiceProvider",
        "ContentID": "$parameters_ContentID",
        "UnixTime": "$parameters_Time"
      },
      "raw_metadata": "$_input_data_object_for_template"
    }
  }
}
